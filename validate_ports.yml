---
# validate_ports.yml
- name: Validate ports before configuration
  hosts: all
  gather_facts: no
  
  vars:
    target_ports: []
    force_check: false    # Set to true to force validation even for ports with warnings
    
  tasks:
    - name: Read switch configuration file
      include_vars:
        file: "{{ config_dir | default('configs') }}/{{ inventory_hostname }}_ports.yml"
        name: switch_config
      when: target_ports | length == 0

    - name: Set ports to validate
      set_fact:
        ports_to_validate: "{{ target_ports | default(switch_config.ports) }}"

    - name: Get interface details
      eos_command:
        commands:
          - show interfaces | json
          - show interfaces status | json
          - show mac address-table | json
      register: interface_details

    - name: Parse interface details
      set_fact:
        interfaces: "{{ interface_details.stdout[0] | from_json }}"
        status: "{{ interface_details.stdout[1] | from_json }}"
        mac_table: "{{ interface_details.stdout[2] | from_json }}"

    - name: Validate each port
      loop: "{{ ports_to_validate }}"
      register: validation_results
      vars:
        int_name: "{{ item.name }}"
        int_facts: "{{ interfaces.interfaces[int_name] | default({}) }}"
        int_status: "{{ status.interfaceStatuses[int_name] | default({}) }}"
        mac_entries: "{{ mac_table.unicastTable.tableEntries | selectattr('interface', 'equalto', int_name) | list }}"
      block:
        - name: Check interface conditions
          fail:
            msg: "WARNING for {{ int_name }}: {{ detail }}"
          when: condition is true
          vars:
            conditions:
              - desc: "Port status check"
                detail: "Port is currently in use (status: up)"
                condition: >
                  int_status.linkStatus == "up" and
                  not force_check|bool

              - desc: "Description check"
                detail: "Port has existing description: '{{ int_status.description }}'"
                condition: >
                  int_status.description is defined and 
                  int_status.description != "" and
                  not force_check|bool

              - desc: "MAC address check"
                detail: "Port has learned MAC addresses: {{ mac_entries | map(attribute='macAddress') | list }}"
                condition: >
                  mac_entries | length > 0 and
                  not force_check|bool

              - desc: "Transceiver check"
                detail: "Port has SFP/transceiver installed: {{ int_status.mediaType }}"
                condition: >
                  int_status.mediaType is defined and
                  int_status.mediaType != "" and
                  not force_check|bool
          ignore_errors: yes

    - name: Summarize validation results
      debug:
        msg: 
          - "Validation completed for {{ inventory_hostname }}"
          - "Warnings found: {{ validation_results.results | selectattr('failed', 'true') | map(attribute='msg') | list }}"
          - "Safe to proceed: {{ validation_results.results | selectattr('failed', 'true') | list | length == 0 }}"

    - name: Fail if any validations failed
      fail:
        msg: "Port validation failed. Review results above."
      when: validation_results.results | selectattr('failed', 'true') | list | length > 0 and not force_check|bool
